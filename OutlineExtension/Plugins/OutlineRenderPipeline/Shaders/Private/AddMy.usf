// Copyright 2025 akoto. All Rights Reserved.

/*=============================================================================
	AddMy.usf: テスト用の追加描画
=============================================================================*/

#include "/Engine/Private/Common.ush"
#include "/Engine/Private/DeferredShadingCommon.ush"
#include "/Engine/Private/SceneTexturesCommon.ush"
#include "/Engine/Private/ScreenPass.ush"
#include "/Engine/Private/SceneTextureParameters.ush"
#include "/Engine/Private/SceneData.ush"


//----------------------------------------------------------------------
//
// Compute shader
//
//----------------------------------------------------------------------

RWTexture2D<float4> OutputTexture;
Texture2D<float4> InputTexture;

[numthreads(16,16,1)]
void AddMyCS(uint2 id : SV_DispatchThreadID)
{
	float4 t = InputTexture[id];
	t *= float4(1.0f, 1.0f, 0.5f, 1.0f);
	// // t = float4(1.0f, 0.5f, 1.0f, 1.0f);
	OutputTexture[id] = t;
	// OutputTexture[id] = float4(0.0f, 1.0f, 0.0f, 1.0f);
}


//----------------------------------------------------------------------
//
// Pixel shader
//
//----------------------------------------------------------------------
Texture2D<float4> SceneColorTexture;
SamplerState SceneColorSampler;

void AddMyPS(FScreenVertexOutput Input, out float4 OutColor : SV_Target0)
{
	//　基本的なUVからピクセルの取り出し
	// SceneTextureLookupは、カスタムノードしか使えない？っぽい
	// float4 Color = SceneTextureLookup(Input.UV, 14, false);
	// FSceneTextureParameters SceneTextures = GetSceneTextureParameters();
	// OutColor = SceneColorTexture.SampleLevel(InputTexture, UV, 0);
	// OutColor = InputTexture.SampleLevel(InputTexture, Input.UV, 0);
	// OutColor = Color;

	// TODO : OutputTexture を出力できる
	float4 sceneColor = Texture2DSample(SceneColorTexture, SceneColorSampler, Input.UV);
	sceneColor *= float4(0.5f, 1.0f, 1.0f, 1.0f);
	OutColor = float4(sceneColor.r, sceneColor.g, sceneColor.b, 1.0);
	// Texture2DSampleLevel(BlurredColorTexture, GlobalBilinearClampedSampler, ViewportUV, 0);
	// OutColor = Texture2DSample(PostprocessInput0, PostprocessInput0Sampler, InUV.xy);

	
	// XXX : そのまま出力するがかなり遠回りなやり方
	// float2 BufferUV   = Input.UV;
	// float2 ClampedUV  = clamp(BufferUV, View.BufferBilinearUVMinMax.xy, View.BufferBilinearUVMinMax.zw);
	// float3 SceneColor = CalcSceneColor(ClampedUV);
	
	// XXX : エラーがかなり出てるが動く・・・？
	// float3 SceneColor = CalcSceneColor(Input.UV);
	// SceneColor *= float3(0.f, 0.01f, 0.f);
	// OutColor = float4(SceneColor.r, SceneColor.g, SceneColor.b, 1.0);

    // 動く
    // OutColor = float4(1.f, 0.f, 0.f, 0.5f);
}
